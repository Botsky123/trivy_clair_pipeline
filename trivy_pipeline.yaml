trigger:
- main

resources:
- repo: self

variables:
  tag: 'latest'
  image_name: 'mysql'
  image_tag: 'latest'
  report_directory: 'report'
  trivyVersion: '0.19.2'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: ScanImage
  displayName: 'Scan Docker Image'
  steps:
    - task: CmdLine@2
      displayName: 'Download and install Trivy'
      inputs:
        script: |
          #!/bin/bash
          trivyVersion="0.19.2" # Ensure this is set to the correct version
          downloadUrl="https://github.com/aquasecurity/trivy/releases/download/v${trivyVersion}/trivy_${trivyVersion}_Linux-64bit.deb"
          echo "Downloading Trivy version ${trivyVersion} from ${downloadUrl}"
          wget $downloadUrl -O trivy.deb
          echo "Installing Trivy..."
          sudo dpkg -i trivy.deb
          if trivy --version; then
            echo "Trivy installation successful."
          else
            echo "Trivy installation failed."
            exit 1
          fi
          # Step to pull or load the Docker image
          docker pull mysql:$(tag)

    - task: CmdLine@2
      displayName: 'Scanning Docker Image with Trivy'
      inputs:
        script: |
          mkdir -p $(Build.SourcesDirectory)/$(report_directory)
          # Scan the image with Trivy
          # Exit code 0 for MEDIUM, HIGH to not fail the pipeline but show vulnerabilities
          trivy image --exit-code 0 --severity MEDIUM,HIGH $(image_name):$(image_tag)
          # Exit code 1 for CRITICAL to fail the pipeline if critical vulnerabilities are found
          trivy image --exit-code 1 --severity CRITICAL --output $(Build.SourcesDirectory)/$(report_directory)/trivy-report.json $(image_name):$(image_tag)
          # Display the Trivy report for debugging
          cat $(Build.SourcesDirectory)/$(report_directory)/trivy-report.json

    - task: PublishBuildArtifacts@1
      displayName: 'Publish vulnerabilities report'
      condition: succeeded()
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/$(report_directory)'
        ArtifactName: 'VulnerabilitiesReport'
        publishLocation: 'Container'
